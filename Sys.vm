// Sys.min implementation
// Pushes the minimum of two arguments onto the stack
function Sys.min 0
    push argument 0
    push argument 1
    lt                 // if argument0 < argument1, true (-1)
    if-goto RETURN_ARG0
    push argument 1    // else push argument1 (minimum)
    goto END_MIN
label RETURN_ARG0
    push argument 0    // push argument0 (minimum)
label END_MIN
    return

// Sys.max implementation
// Pushes the maximum of two arguments onto the stack
function Sys.max 0
    push argument 0
    push argument 1
    gt                 // if argument0 > argument1, true (-1)
    if-goto RETURN_ARG0
    push argument 1    // else push argument1 (maximum)
    goto END_MAX
label RETURN_ARG0
    push argument 0    // push argument0 (maximum)
label END_MAX
    return

// Sys.range implementation
// Computes the range (max - min) of an array
// ARG0 - array base address
// ARG1 - array length
function Sys.range 2
    push argument 1
    push constant 1
    gt
    if-goto RANGE_START
    push constant 0
    return             // If length <= 1, range is 0

label RANGE_START
    // Initialize min and max with first element
    push argument 0
    pop pointer 0
    push this 0
    pop local 0        // local 0 = min
    push this 0
    pop local 1        // local 1 = max

    push constant 1
    pop local 2        // local 2 = index (start from 1)

label RANGE_LOOP
    push local 2
    push argument 1
    eq
    if-goto RANGE_DONE // If index == length, done looping

    push argument 0
    push local 2
    add
    pop pointer 0
    push this 0        // current element

    // Update min
    push local 0
    push this 0
    call Sys.min 2
    pop local 0        // min = min(min, this[index])

    // Update max
    push local 1
    push this 0
    call Sys.max 2
    pop local 1        // max = max(max, this[index])

    // Increment index
    push local 2
    push constant 1
    add
    pop local 2

    goto RANGE_LOOP

label RANGE_DONE
    // Compute max - min and return
    push local 1       // max
    push local 0       // min
    sub
    return

// Sys.init implementation for testing
function Sys.init 0
    // Test min (expected result on stack: 2)
    push constant 4
    push constant 2
    call Sys.min 2

    // Test max (expected result on stack: 4)
    push constant 4
    push constant 2
    call Sys.max 2

    // Infinite loop to halt emulator
label WHILE
    goto WHILE
